apply plugin: 'com.android.application'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi'
        }

        resConfigs "zh"

        manifestPlaceholders = [BUGLY_CHANNEL : "bugly",
                                APPLICATION_ID: rootProject.ext.android.applicationId
        ]
    }

//    signingConfigs{
//        v2 {
//            storeFile file(properties.getProperty("STORE_FILE"))
//            storePassword properties.getProperty("STORE_PASSWORD")
//            keyAlias properties.getProperty("KEY_ALIAS")
//            keyPassword properties.getProperty("KEY_PASSWORD")
//            v2SigningEnabled true
//        }
//
//        v1 {
//            storeFile file(properties.getProperty("STORE_FILE"))
//            storePassword properties.getProperty("STORE_PASSWORD")
//            keyAlias properties.getProperty("KEY_ALIAS")
//            keyPassword properties.getProperty("KEY_PASSWORD")
//            // 只使用旧版签名，禁用V2版签名模式
//            v2SigningEnabled false
//        }
//    }

    buildTypes {
        debug {
            // applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

//        release {
//            signingConfig signingConfigs.v1
//            // 混淆
//            minifyEnabled false
//            // Zipalign优化
//            zipAlignEnabled false
//            // 移除无用的resource文件
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//
//            def today = new Date()
//            applicationVariants.all { variant ->
//                if (variant.buildType.getName().equals("release")) {
//                    println "Change output apk name"
//                    variant.outputs.each { output ->
//                        def fileName = "WagesRecords_${defaultConfig.versionName}_" + today.format('yyyyMMddHHmmss') + ".apk"
//                        output.outputFile = new File(output.outputFile.parent, fileName)
//                    }
//                }
//            }
//        }
    }

    lintOptions {
        abortOnError false
    }
}

//configurations.all {
//    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//        def requested = details.requested
//        if (requested.group == 'com.android.support') {
//            if (!requested.name.startsWith("multidex")) {
//                details.useVersion '25.3.1'
//            }
//        }
//    }
//}

dependencies {
    implementation rootProject.ext.supportAppcompatV7
    implementation rootProject.ext.supportRecyclerView
    implementation rootProject.ext.supportCardView
    implementation rootProject.ext.supportDesign

    implementation rootProject.ext.basicProject
    implementation rootProject.ext.commonAdapter
    implementation rootProject.ext.materialDialog
    implementation rootProject.ext.materialSpinner
    implementation rootProject.ext.materialEditText
    implementation rootProject.ext.pickerView
    implementation rootProject.ext.circleImageView
    implementation rootProject.ext.sqlbrite

    implementation rootProject.ext.butterknife
    implementation rootProject.ext.dagger2
    implementation rootProject.ext.glide
    annotationProcessor rootProject.ext.butterknifeCompiler
    annotationProcessor rootProject.ext.dagger2Compiler
    annotationProcessor rootProject.ext.glideCompiler

    implementation rootProject.ext.bugly

}